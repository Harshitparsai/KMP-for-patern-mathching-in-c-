#include<bits/stdc++.h>
using namespace std;
void computeLPS(string pat,int m,int lps[]);
void findKMP(string text,string pat)
{
	int n = text.length();
	int m = pat.length();
	int lps[m];
	computeLPS(pat,m,lps);
	int i=0;
	int j=0;
    while(i<n)
    {
    	if(text[i]==pat[j])
    	{
    		i++;
    		j++;
		}
		if(j==m)
		{
			cout<<"patern found at"<<i-j;
			j = lps[j-1]; 
		}
		else if(i<n && text[i]!=pat[j]){
			
			if(j!=0)
			{
				j=lps[j-1];
			}
			else{
				i++;
			}
		}
		
	}
}
void computeLPS(string pat , int m , int lps[])
{
	int len = 0;
	int i=1;
	lps[0] = 0;
	while(i<m)
	{
		if(pat[i]==pat[len])
		{
			len++;
			lps[i] = len;
			i++; 
		}
		else{
			if(len!=0)
					len = lps[len-1];
			else
			 	{
			 		lps[i]=0;
			 		i++;
				 }
		}
	}
}

int main()
{
	string text = "heackerhackerearthheackerhackerearth";
	string pat = "hackerearth";
	findKMP(text,pat);
	return(0);
}
